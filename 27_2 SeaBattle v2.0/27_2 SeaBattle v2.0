/* Морской бой */

#include  <iostream>
#include <conio.h> //_getch()
#include <math.h>
#include <time.h>
//#include <windows.h>
#include <string.h>
#include <stdio.h>
//#include <errno.h>
//#include <stdlib.h>

using namespace std;


// Global Var	
const int size = 10;


// Structures
struct ships{
	int deckNum;// decks number
	int amount; // ships quantity 
};


// Procedure & Function Prototypes
void arrPrint(char arr[][size]); // Any array print
void fieldHumanCreate(char arr[][size]); // Filling Human Field

void main() {

	//srand(time(NULL));

	// Create battle fields arrays
	char fieldHum[size][size];
	//char fieldPC[size][size];


	cout << "\t-Sea Battle-" << endl << endl;

	cout << "Arrange your ships!" << endl << endl;


	fieldHumanCreate(fieldHum);
	//arrPrint(fieldHum);



	ships ship1;
	ship1.deckNum = 1;
	ship1.amount = 4;
	ships ship2;
	ship2.deckNum = 2;
	ship1.amount = 3;
	ships ship3;
	ship3.deckNum = 3;
	ship1.amount = 2;
	ships ship4;
	ship4.deckNum = 4;
	ship1.amount = 1;














}//main



// Filling Human Field
void fieldHumanCreate(char arr[][size]){


	// Global while
	int inpt = 0;
	int x = 5, y = 5;
	int rotate = 2;
	int shipsNUM = 10;
	int deckSize = 4;

	while (shipsNUM>0){

		

		system("cls");

		// Manipulation
		
		
		if (inpt == 32)
			rotate++;		
		if (inpt == 77 && x < size-1)
			x ++;
		if (inpt == 75 && x > 0)
			x --;
		if (inpt == 80 && y < size - 1)
			y++;
		if (inpt == 72 && y>0)
			y --;



		if (shipsNUM == 10)
			deckSize = 4;
		else if (shipsNUM<=9 && shipsNUM>=8)
			deckSize = 3;
		else if (shipsNUM <= 7 && shipsNUM >= 5)
			deckSize = 2;
		else 
			deckSize = 1;

	
	// Create array for Human field
		for (int i = 0; i < size; i++){
						
			for (int j = 0; j < size; j++){


				if (arr[i][j] != 'O' && arr[i][j]!='-')
					arr[i][j] = '+';


				// Cicle for creating decks and to fix them
				for (int k = 0; k < deckSize; k++ ){// deckSize - change to different decks num

					char temp = '?';
					if (inpt == 13 && arr[i][j]!='-')
						temp = 'O';
									
					
					if (rotate % 2 == 0){
						if (arr[y + k][x] != 'O' && arr[y + k][x]!='-')// Help not to change 'O' on the field
							arr[y + k][x] = temp;
												
					}
					else {
						if (arr[y][x + k] != 'O' && arr[y][x + k] != '-')// Help not to change 'O' on the field
						arr[y][x + k] = temp;
					}

				}// end for k				

				// Put '-' around 'O' ----------------------
				for (int n = 0; n < size; n++){
					for (int k = 0; k < size; k++){

						if (arr[n][k] == 'O'){
							for (int nn = n - 1; nn <= n + 1; nn++){
								for (int kk = k - 1; kk <= k + 1; kk++){
									if (arr[nn][kk] != 'O' )
										arr[nn][kk] = '-';
								}
							}

						}
					}
				}// end for n
				//-----------------------------
					

			}// end for j

		}// end for i

		arrPrint(arr);

	
		if (inpt == 13)
			shipsNUM--;

		// Get button
		inpt = 224;
		while (inpt == 224){
			inpt = _getch();
		}
		//cout << inpt<<endl<< shipsNUM<<endl;
		



	}// end Global While





}// End function Filling Human field



// Any array print
void arrPrint(char arr[][size]){

	cout << "   a b c d e f g h i j" << endl;
	cout << "   _ _ _ _ _ _ _ _ _ _" << endl;



	for (int i = 0; i < size; i++){

		if (i + 1 <= 9)
			cout << " ";
		cout << i + 1 << "|";

		for (int j = 0; j < size; j++){
			cout << arr[i][j] << " ";
		}
		cout << "\b|" << endl;

	}
	cout << "  `````````````````````" << endl;
}